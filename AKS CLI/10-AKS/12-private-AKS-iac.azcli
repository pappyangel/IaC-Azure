#!/bin/bash

# --- Create Resource Group ---
az group create --name $SPOKE_AKS_RG_NAME --location $LOCATION 

# --- Create VNet ---
az network vnet create \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $SPOKE_AKS_VNET_NAME \
  --address-prefixes $SPOKE_VNET_ADDRESS_PREFIX \
  --location $LOCATION 

# --- Create AKS Subnet ---
az network vnet subnet create \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --name $AKS_SUBNET_NAME \
  --address-prefixes $SPOKE_AKS_SUBNET_PREFIX 

# --- Get AKS Subnet ID ---
export AKS_SUBNET_ID=$(az network vnet subnet show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --name $AKS_SUBNET_NAME \
  --query id -o tsv)

echo "AKS Subnet ID: $AKS_SUBNET_ID"

# --- Check Private DNS Zone ---
echo "Checking Private DNS Zone..."
export PRIVATE_DNS_ZONE_ID=$(az network private-dns zone show \
  --resource-group $DNS_ZONE_RG_NAME \
  --name $PRIVATE_ZONE_NAME \
  --query id -o tsv 2>/dev/null)

echo "Private DNS Zone ID: $PRIVATE_DNS_ZONE_ID"

# --- Create User-Assigned Managed Identity ---
az identity create \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $AKS_MANAGEDIDENTITY_NAME \
  --location $LOCATION 

export IDENTITY_PRINCIPAL_ID=$(az identity show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $AKS_MANAGEDIDENTITY_NAME \
  --query principalId -o tsv)

echo "Managed Identity Principal ID: $IDENTITY_PRINCIPAL_ID"

export IDENTITY_ID=$(az identity show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $AKS_MANAGEDIDENTITY_NAME \
  --query id -o tsv)

echo "Managed Identity ID: $IDENTITY_ID"

# --- Assign 'Private DNS Zone Contributor' Role (idempotent) ---
az role assignment create \
  --assignee $IDENTITY_PRINCIPAL_ID \
  --role "Private DNS Zone Contributor" \
  --scope $PRIVATE_DNS_ZONE_ID 

# --- Assign 'Network Contributor' Role on VNet (idempotent) ---
az role assignment create \
  --assignee $IDENTITY_PRINCIPAL_ID \
  --role "Network Contributor" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$SPOKE_AKS_RG_NAME/providers/Microsoft.Network/virtualNetworks/$SPOKE_AKS_VNET_NAME"   

# --- Create Private AKS Cluster ---
az aks create \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $SPOKE_AKS_PRIVATE_CLUSTER_NAME \
  --location $LOCATION \
  --node-count 3 \
  --node-vm-size Standard_B2as_v2 \
  --enable-private-cluster \
  --private-dns-zone $PRIVATE_DNS_ZONE_ID \
  --network-plugin azure \
  --vnet-subnet-id $AKS_SUBNET_ID \
  --service-cidr $SPOKE_AKS_SERVICE_CIDR \
  --dns-service-ip $SPOKE_AKS_DNS_SERVICE_IP \
  --assign-identity $IDENTITY_ID \
  --assign-kubelet-identity $IDENTITY_ID \
  --generate-ssh-keys 

# NOTE: if planning to use workload identity, you need to add the following flags:
# --enable-oidc-issuer \
# --enable-workload-identity \


export dog=spoke${SPOKE_ID}-aks-to-hub-peering 

# peer the spoke aks vnet with our hub vnet
az network vnet peering create \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name spoke${SPOKE_ID}-aks-to-hub-peering \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --remote-vnet "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$HUB_RG_NAME/providers/Microsoft.Network/virtualNetworks/$HUB_VNET_NAME" \
  --allow-vnet-access \
  --allow-forwarded-traffic \
  --use-remote-gateways true

# peer the hub vnet to the spoke aks vnet
az network vnet peering create \
  --resource-group $HUB_RG_NAME \
  --name hub-to-spoke${SPOKE_ID}-aks-peering \
  --vnet-name  $HUB_VNET_NAME \
  --remote-vnet "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$SPOKE_AKS_RG_NAME/providers/Microsoft.Network/virtualNetworks/$SPOKE_AKS_VNET_NAME" \
  --allow-vnet-access \
  --allow-forwarded-traffic \
  --allow-gateway-transit true

# --- Assign 'Network Contributor' Role on Hub VNet ---
az role assignment create \
  --assignee $IDENTITY_PRINCIPAL_ID \
  --role "Network Contributor" \
  --scope "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$HUB_RG_NAME/providers/Microsoft.Network/virtualNetworks/$HUB_VNET_NAME"

# --- Create Private DNS Zone Virtual Network Link to Spoke-ID VNet ---
az network private-dns link vnet create \
  --resource-group $DNS_ZONE_RG_NAME \
  --name vnl-spoke${SPOKE_ID}-regional-dns \
  --zone-name $PRIVATE_ZONE_NAME \
  --virtual-network "/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$SPOKE_AKS_RG_NAME/providers/Microsoft.Network/virtualNetworks/$SPOKE_AKS_VNET_NAME" \
  --registration-enabled false

# This is an optional line.  It shows how to add an A record.  We did this for a test App that may no longer exist.
az network private-dns record-set a add-record \
  --resource-group $DNS_ZONE_RG_NAME \
  --zone-name $PRIVATE_ZONE_NAME \
  --record-set-name aks-api \
  --ipv4-address 10.2.0.92

# End of script finished