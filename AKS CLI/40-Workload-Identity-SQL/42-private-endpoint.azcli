# Source the variables from the AKS variables file
source "../../Hub-Spoke AZ CLI steps/00-batch-run-vars.azcli"
source ../10-AKS/00-variables.azcli

# SQL Server specific variables - Update these with your actual values
export SQL_SERVER_NAME="jfv-sql"
export SQL_SERVER_RG_NAME="rg-DataServices"
export PRIVATE_ENDPOINT_NAME="sql-private-endpoint-${SPOKE_AKS_PRIVATE_CLUSTER_NAME}" 
export PRIVATE_DNS_ZONE_NAME="privatelink.database.windows.net"

export PRIVATE_DNS_LINK_NAME="vnl-sql-${SPOKE_AKS_PRIVATE_CLUSTER_NAME}"

# Get SQL Server resource ID
export SQL_SERVER_ID=$(az sql server show \
  --name $SQL_SERVER_NAME \
  --resource-group $SQL_SERVER_RG_NAME \
  --query id \
  --output tsv)

echo "SQL Server ID: $SQL_SERVER_ID"

# Get subnet ID
export SUBNET_ID=$(az network vnet subnet show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --name $AKS_SUBNET_NAME \
  --query id \
  --output tsv)

echo "Subnet ID: $SUBNET_ID"

# Get VNet resource ID (needed when VNet is in different resource group)
export VNET_ID=$(az network vnet show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $SPOKE_AKS_VNET_NAME \
  --query id \
  --output tsv)

echo "VNet ID: $VNET_ID"

# Disable private endpoint network policies on the subnet
az network vnet subnet update \
  --name $AKS_SUBNET_NAME \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --disable-private-endpoint-network-policies true

# Create private endpoint for SQL Server (in SQL resource group)
az network private-endpoint create \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $SQL_SERVER_RG_NAME \
  --subnet $SUBNET_ID \
  --private-connection-resource-id $SQL_SERVER_ID \
  --group-id sqlServer \
  --connection-name "connection-${SQL_SERVER_NAME}" \
  --location $LOCATION

# Get private endpoint IP address
export PRIVATE_ENDPOINT_IP=$(az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $SQL_SERVER_RG_NAME \
  --query 'customDnsConfigs[0].ipAddresses[0]' \
  --output tsv)

echo "Private Endpoint IP: $PRIVATE_ENDPOINT_IP"

# Optional: Show the automatically created network interface
export ACTUAL_NIC_NAME=$(az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $SQL_SERVER_RG_NAME \
  --query 'networkInterfaces[0].id' \
  --output tsv | xargs basename)

echo "Auto-created Network Interface: $ACTUAL_NIC_NAME"

# Create private DNS zone (if it doesn't exist)
az network private-dns zone create \
  --resource-group $DNS_ZONE_RG_NAME \
  --name $PRIVATE_DNS_ZONE_NAME

# Link private DNS zone to VNet - i.e. create the VNL
az network private-dns link vnet create \
  --resource-group $DNS_ZONE_RG_NAME \
  --zone-name $PRIVATE_DNS_ZONE_NAME \
  --name $PRIVATE_DNS_LINK_NAME \
  --virtual-network $VNET_ID \
  --registration-enabled false

# Get DNS zone resource ID (needed when DNS zone is in different resource group)
export DNS_ZONE_ID=$(az network private-dns zone show \
  --resource-group $DNS_ZONE_RG_NAME \
  --name $PRIVATE_DNS_ZONE_NAME \
  --query id \
  --output tsv)

echo "DNS Zone ID: $DNS_ZONE_ID"

# Create DNS zone group for automatic DNS registration
az network private-endpoint dns-zone-group create \
  --resource-group $SQL_SERVER_RG_NAME \
  --endpoint-name $PRIVATE_ENDPOINT_NAME \
  --name "sqlserver-dns-zone-group" \
  --private-dns-zone $DNS_ZONE_ID \
  --zone-name sql

# Verify private endpoint connection
az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $SQL_SERVER_RG_NAME \
  --query 'privateLinkServiceConnections[0].privateLinkServiceConnectionState'



# Display connection information
echo ""
echo "Private Endpoint Setup Complete!"
echo "SQL Server: $SQL_SERVER_NAME"onnection string should use: $SQL_SERVER_NAME.database.windows.net"
echo "Private Endpoint: $PRIVATE_ENDPOINT_NAME"
echo "Private IP: $PRIVATE_ENDPOINT_IP"s.net"
echo "DNS Zone: $PRIVATE_DNS_ZONE_NAME"
echo ""
echo "Connection string should use: $SQL_SERVER_NAME.database.windows.net"
echo "This will now resolve to the private IP: $PRIVATE_ENDPOINT_IP"
echo "DNS Zone: $PRIVATE_DNS_ZONE_NAME"
echo ""
echo ""
echo "Connection string should use: $SQL_SERVER_NAME.database.windows.net"
echo "This will now resolve to the private IP: $PRIVATE_ENDPOINT_IP"
echo "Connection string should use: $SQL_SERVER_NAME.database.windows.net"
echo "This will now resolve to the private IP: $PRIVATE_ENDPOINT_IP"
