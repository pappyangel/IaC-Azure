# Source the variables from the AKS variables file
source ../../Hub-Spoke-AZ-CLI/00-batch-run-vars.azcli
source ../10-AKS/00-variables.azcli

# Source local secrets 
source ../../.env.local

# STORAGE_ACCOUNT_NAME - from secrets
export STORAGE_ACCOUNT_RG_NAME=$(az storage account show --name "$STORAGE_ACCOUNT_NAME" --query "resourceGroup" -o tsv)

echo "Storage Account: $STORAGE_ACCOUNT_NAME"
echo "Storage Account Resource Group: $STORAGE_ACCOUNT_RG_NAME"

export PRIVATE_ENDPOINT_NAME="storage-private-endpoint-${SPOKE_AKS_PRIVATE_CLUSTER_NAME}" 
export PRIVATE_DNS_ZONE_NAME="privatelink.blob.core.windows.net"

export PRIVATE_DNS_LINK_NAME="vnl-storage-${SPOKE_AKS_PRIVATE_CLUSTER_NAME}"

# Get Storage Account resource ID
export STORAGE_ACCOUNT_ID=$(az storage account show \
  --name $STORAGE_ACCOUNT_NAME \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --query id \
  --output tsv)

echo "Storage Account ID: $STORAGE_ACCOUNT_ID"

# Get subnet ID
export SUBNET_ID=$(az network vnet subnet show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --name $AKS_SUBNET_NAME \
  --query id \
  --output tsv)

echo "Subnet ID: $SUBNET_ID"

# Get VNet resource ID (needed when VNet is in different resource group)
export VNET_ID=$(az network vnet show \
  --resource-group $SPOKE_AKS_RG_NAME \
  --name $SPOKE_AKS_VNET_NAME \
  --query id \
  --output tsv)

echo "VNet ID: $VNET_ID"

# Disable private endpoint network policies on the subnet
az network vnet subnet update \
  --name $AKS_SUBNET_NAME \
  --resource-group $SPOKE_AKS_RG_NAME \
  --vnet-name $SPOKE_AKS_VNET_NAME \
  --disable-private-endpoint-network-policies true

# Create private endpoint for Storage Account (in Storage resource group)
az network private-endpoint create \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --subnet $SUBNET_ID \
  --private-connection-resource-id $STORAGE_ACCOUNT_ID \
  --group-id blob \
  --connection-name "connection-${STORAGE_ACCOUNT_NAME}" \
  --location $LOCATION

# Get private endpoint IP address
export PRIVATE_ENDPOINT_IP=$(az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --query 'customDnsConfigs[0].ipAddresses[0]' \
  --output tsv)

echo "Private Endpoint IP: $PRIVATE_ENDPOINT_IP"

# Optional: Show the automatically created network interface
export ACTUAL_NIC_NAME=$(az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --query 'networkInterfaces[0].id' \
  --output tsv | xargs basename)

echo "Auto-created Network Interface: $ACTUAL_NIC_NAME"

# Create private DNS zone (if it doesn't exist)
az network private-dns zone create \
  --resource-group $DNS_ZONE_RG_NAME \
  --name $PRIVATE_DNS_ZONE_NAME

# Link private DNS zone to VNet - i.e. create the VNL
az network private-dns link vnet create \
  --resource-group $DNS_ZONE_RG_NAME \
  --zone-name $PRIVATE_DNS_ZONE_NAME \
  --name $PRIVATE_DNS_LINK_NAME \
  --virtual-network $VNET_ID \
  --registration-enabled false

# Get DNS zone resource ID (needed when DNS zone is in different resource group)
export DNS_ZONE_ID=$(az network private-dns zone show \
  --resource-group $DNS_ZONE_RG_NAME \
  --name $PRIVATE_DNS_ZONE_NAME \
  --query id \
  --output tsv)

# Create DNS zone group for automatic DNS registration
az network private-endpoint dns-zone-group create \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --endpoint-name $PRIVATE_ENDPOINT_NAME \
  --name "storage-dns-zone-group" \
  --private-dns-zone $DNS_ZONE_ID \
  --zone-name blob

# Verify private endpoint connection
az network private-endpoint show \
  --name $PRIVATE_ENDPOINT_NAME \
  --resource-group $STORAGE_ACCOUNT_RG_NAME \
  --query 'privateLinkServiceConnections[0].privateLinkServiceConnectionState'

# Display connection information
echo ""
echo "Private Endpoint Setup Complete!"
echo "Storage Account: $STORAGE_ACCOUNT_NAME"
echo "Private Endpoint: $PRIVATE_ENDPOINT_NAME"
echo "Private IP: $PRIVATE_ENDPOINT_IP"
echo "DNS Zone: $PRIVATE_DNS_ZONE_NAME"
echo ""
echo "Storage URLs will now resolve to the private IP: $PRIVATE_ENDPOINT_IP"
echo "Blob endpoint: $STORAGE_ACCOUNT_NAME.blob.core.windows.net"
